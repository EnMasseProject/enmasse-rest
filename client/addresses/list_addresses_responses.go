package addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/EnMasseProject/enmasse-rest/models"
)

// ListAddressesReader is a Reader for the ListAddresses structure.
type ListAddressesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAddressesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListAddressesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListAddressesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewListAddressesOK creates a ListAddressesOK with default headers values
func NewListAddressesOK() *ListAddressesOK {
	return &ListAddressesOK{}
}

/*ListAddressesOK handles this case with default header values.

Address config response
*/
type ListAddressesOK struct {
	Payload models.AddressConfigMap
}

func (o *ListAddressesOK) Error() string {
	return fmt.Sprintf("[GET /v1/enmasse/addresses][%d] listAddressesOK  %+v", 200, o.Payload)
}

func (o *ListAddressesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAddressesDefault creates a ListAddressesDefault with default headers values
func NewListAddressesDefault(code int) *ListAddressesDefault {
	return &ListAddressesDefault{
		_statusCode: code,
	}
}

/*ListAddressesDefault handles this case with default header values.

Unexpected error
*/
type ListAddressesDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list addresses default response
func (o *ListAddressesDefault) Code() int {
	return o._statusCode
}

func (o *ListAddressesDefault) Error() string {
	return fmt.Sprintf("[GET /v1/enmasse/addresses][%d] listAddresses default  %+v", o._statusCode, o.Payload)
}

func (o *ListAddressesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
