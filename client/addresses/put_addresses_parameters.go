package addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/EnMasseProject/enmasse-rest/models"
)

// NewPutAddressesParams creates a new PutAddressesParams object
// with the default values initialized.
func NewPutAddressesParams() *PutAddressesParams {
	var ()
	return &PutAddressesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutAddressesParamsWithTimeout creates a new PutAddressesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutAddressesParamsWithTimeout(timeout time.Duration) *PutAddressesParams {
	var ()
	return &PutAddressesParams{

		timeout: timeout,
	}
}

// NewPutAddressesParamsWithContext creates a new PutAddressesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutAddressesParamsWithContext(ctx context.Context) *PutAddressesParams {
	var ()
	return &PutAddressesParams{

		Context: ctx,
	}
}

/*PutAddressesParams contains all the parameters to send to the API endpoint
for the put addresses operation typically these are written to a http.Request
*/
type PutAddressesParams struct {

	/*AddressConfigMap
	  AddressConfig to set

	*/
	AddressConfigMap models.AddressConfigMap

	timeout time.Duration
	Context context.Context
}

// WithTimeout adds the timeout to the put addresses params
func (o *PutAddressesParams) WithTimeout(timeout time.Duration) *PutAddressesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put addresses params
func (o *PutAddressesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put addresses params
func (o *PutAddressesParams) WithContext(ctx context.Context) *PutAddressesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put addresses params
func (o *PutAddressesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithAddressConfigMap adds the addressConfigMap to the put addresses params
func (o *PutAddressesParams) WithAddressConfigMap(addressConfigMap models.AddressConfigMap) *PutAddressesParams {
	o.SetAddressConfigMap(addressConfigMap)
	return o
}

// SetAddressConfigMap adds the addressConfigMap to the put addresses params
func (o *PutAddressesParams) SetAddressConfigMap(addressConfigMap models.AddressConfigMap) {
	o.AddressConfigMap = addressConfigMap
}

// WriteToRequest writes these params to a swagger request
func (o *PutAddressesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if err := r.SetBodyParam(o.AddressConfigMap); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
