package addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListAddressesHandlerFunc turns a function with the right signature into a list addresses handler
type ListAddressesHandlerFunc func(ListAddressesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListAddressesHandlerFunc) Handle(params ListAddressesParams) middleware.Responder {
	return fn(params)
}

// ListAddressesHandler interface for that can handle valid list addresses params
type ListAddressesHandler interface {
	Handle(ListAddressesParams) middleware.Responder
}

// NewListAddresses creates a new http.Handler for the list addresses operation
func NewListAddresses(ctx *middleware.Context, handler ListAddressesHandler) *ListAddresses {
	return &ListAddresses{Context: ctx, Handler: handler}
}

/*ListAddresses swagger:route GET /v1/enmasse/addresses addresses listAddresses

Returns the addressing configuration for the cluster

*/
type ListAddresses struct {
	Context *middleware.Context
	Handler ListAddressesHandler
}

func (o *ListAddresses) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewListAddressesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
